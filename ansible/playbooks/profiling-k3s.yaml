---
- name: Profiling k3s
  hosts: K3s
  become: False
  gather_facts: True
  vars: 
    simulation: "1000"
    platform: "K3s"
    SIMULATION_WAIT_INTERVAL: "30"
    SIMULATION_IDLE_INTERVAL: "300"
  tasks:
  - name: K3s is stopped
    command: /usr/local/bin/k3s-killall.sh
    become: True
    ignore_errors: yes
    tags: platform

  - name: Waited {{ SIMULATION_WAIT_INTERVAL }} sec.
    pause:
      seconds: "{{ SIMULATION_WAIT_INTERVAL }}"
    tags: simulation

  - name: Simulation is inserted
    command: python3 ../minion/minion_db_service.py simulation --sim_id {{ simulation }} --platform {{ platform }}
    register: sim_oid
    delegate_to: localhost
    run_once: true
    tags: simulation

  - set_fact:
      sim_oid: "{{ sim_oid }}"
    run_once: true
    tags: simulation

  - name: Controller host is inserted
    command: python3 ../minion/minion_db_service.py host --simulation_id {{ sim_oid.stdout_lines[0] }} --hostname "uniba-dsg-linux0" --role "controller"
    register: host_oid
    delegate_to: localhost
    run_once: true
    tags: simulation

  - set_fact:
      host_oid: "{{ host_oid }}"
    run_once: true
    tags: simulation

  - name: Hosts are inserted
    command: python3 ../minion/minion_db_service.py host --simulation_id {{ sim_oid.stdout_lines[0] }} --hostname {{ hostname }} --role {{ role }}
    delegate_to: localhost
    tags: simulation

  - name: nginx-deployment.yaml is present on remote machine
    copy:
      src: templates/nginx-deployment.yaml
      dest: /home/{{ ansible_user }}/nginx-deployment.yaml
      force: yes
    tags: platform

  - name: Ensure correlation id for START_SIMULATION (8) is created
    command: python3 ../minion/minion_db_service.py uuid
    register: start_simulation_correlation_uuid
    delegate_to: localhost
    run_once: true
    tags: simulation

  - name: Ensure correlation id for START_KNS_PLATFORM (20) is created
    command: python3 ../minion/minion_db_service.py uuid
    register: start_kns_platform_uuid
    delegate_to: localhost
    run_once: true
    tags: simulation

  - name: Ensure correlation id for START_KNS_JOIN_NODES (22) is created
    command: python3 ../minion/minion_db_service.py uuid
    register: start_kns_join_nodes_uuid
    delegate_to: localhost
    run_once: true
    tags: simulation

  - name: Ensure correlation id for START_KNS_DEPLOYMENT (24) is created
    command: python3 ../minion/minion_db_service.py uuid
    register: start_kns_deployment_uuid
    delegate_to: localhost
    run_once: true
    tags: simulation

  - name: Ensure correlation id for STOP_KNS_DEPLOYMENT (26) is created
    command: python3 ../minion/minion_db_service.py uuid
    register: stop_kns_deployment_uuid
    delegate_to: localhost
    run_once: true
    tags: simulation

  - name: Ensure correlation id for START_KNS_UNJOIN_NODES (28) is created
    command: python3 ../minion/minion_db_service.py uuid
    register: start_kns_unjoin_nodes_uuid
    delegate_to: localhost
    run_once: true
    tags: simulation

  - name: Ensure correlation id for STOP_KNS_PLATFORM (30) is created
    command: python3 ../minion/minion_db_service.py uuid
    register: stop_kns_platform_uuid
    delegate_to: localhost
    run_once: true
    tags: simulation

  - name: Ensure event START_SIMULATION (8) is inserted
    command: >
      python3 ../minion/minion_db_service.py event 
      --host_id {{ host_oid.stdout_lines[0] }} 
      --correlation_id  {{ start_simulation_correlation_uuid.stdout_lines[0] }}
      --event_type 8
      --body ""
    delegate_to: localhost
    run_once: true
    tags: simulation

  # system is idle
  - name: Waited {{ SIMULATION_IDLE_INTERVAL }} sec.
    pause:
      seconds: "{{ SIMULATION_IDLE_INTERVAL }}"

  - name: Ensure event START_KNS_PLATFORM (20) is inserted
    command: >
      python3 ../minion/minion_db_service.py event 
      --host_id {{ host_oid.stdout_lines[0] }} 
      --correlation_id  {{ start_kns_platform_uuid.stdout_lines[0] }}
      --event_type 20
      --body ""
    delegate_to: localhost
    run_once: true
    tags: simulation

  - name: K3s is started on master node
    shell: cat /home/{{ ansible_user }}/k3s | INSTALL_K3S_SKIP_DOWNLOAD=true INSTALL_K3S_EXEC="server --node-external-ip 192.168.4.13 --node-ip 192.168.4.13" sh -s -
    become: True
    ignore_errors: yes
    when: "inventory_hostname in groups['K3sMasterNodes']"
    tags: platform

  - name: K3s start is acknowledged
    command: k3s kubectl get nodes
    become: True
    register: k3s_kubectl_get_nodes
    until: (k3s_kubectl_get_nodes.stdout | regex_findall('NotReady') | length) == 0 and (k3s_kubectl_get_nodes.stdout | regex_findall('Ready') | length) == 1
    retries: 9999
    delay: 1
    delegate_to: K3sMaster
    run_once: true
    tags: platform

  - name: Ensure event FINISHED_START_KNS_PLATFORM (21) is inserted
    command: >
      python3 ../minion/minion_db_service.py event 
      --host_id {{ host_oid.stdout_lines[0] }} 
      --correlation_id  {{ start_kns_platform_uuid.stdout_lines[0] }}
      --event_type 21
      --body ""
    delegate_to: localhost
    run_once: true
    tags: simulation

  # kns nodes idle
  - name: Waited {{ SIMULATION_IDLE_INTERVAL }} sec.
    pause:
      seconds: "{{ SIMULATION_IDLE_INTERVAL }}"

  - name: Ensure event START_KNS_JOIN_NODES (22) is inserted
    command: >
      python3 ../minion/minion_db_service.py event 
      --host_id {{ host_oid.stdout_lines[0] }} 
      --correlation_id  {{ start_kns_join_nodes_uuid.stdout_lines[0] }}
      --event_type 22
      --body ""
    delegate_to: localhost
    run_once: true
    tags: simulation
  
  - name: K3s master is elected
    command: cat /var/lib/rancher/k3s/server/node-token
    register: node_token
    become: True
    when: "inventory_hostname in groups['K3sMasterNodes']"
    tags: platform

  - set_fact:
      node_token: "{{ node_token.stdout }}"
    run_once: true
    when: "inventory_hostname in groups['K3sMasterNodes']"
    tags: platform

  - name: Worker nodes are joined
    shell: | 
      cat /home/{{ ansible_user }}/k3s | INSTALL_K3S_EXEC="agent --server https://192.168.4.13:6443 --token {{ node_token }}  --node-ip {{ ansible_host }} --node-external-ip {{ ansible_host }}" sh -s -
    become: True
    throttle: 1
    when: "inventory_hostname in groups['K3sWorkerNodes']"
    tags: platform

  - name: Check nodes for ready states
    command: k3s kubectl get nodes
    become: True
    register: k3s_kubectl_get_nodes
    until: (k3s_kubectl_get_nodes.stdout | regex_findall('NotReady') | length) == 0 and (k3s_kubectl_get_nodes.stdout | regex_findall('Ready') | length) == 4
    retries: 9999
    delay: 1
    delegate_to: K3sMaster
    run_once: true
    tags: platform

  - name: Ensure event FINISHED_KNS_JOIN_NODES (23) is inserted
    command: >
      python3 ../minion/minion_db_service.py event 
      --host_id {{ host_oid.stdout_lines[0] }}
      --correlation_id  {{ start_kns_join_nodes_uuid.stdout_lines[0] }}
      --event_type 23
      --body ""
    delegate_to: localhost
    run_once: true
    tags: simulation

  # kns cluster idle
  - name: Wait additional {{ SIMULATION_IDLE_INTERVAL }} sec.
    pause:
      seconds: "{{ SIMULATION_IDLE_INTERVAL }}"

  - name: Ensure event START_KNS_DEPLOYMENT (24) is inserted
    command: >
      python3 ../minion/minion_db_service.py event 
      --host_id {{ host_oid.stdout_lines[0] }}
      --correlation_id  {{ start_kns_deployment_uuid.stdout_lines[0] }}
      --event_type 24
      --body ""
    delegate_to: localhost
    run_once: true
    tags: simulation

  - name: Deploy nginx deployment
    command: k3s kubectl apply -f nginx-deployment.yaml
    delegate_to: K3sMaster
    run_once: true
    become: true
    tags: platform

  - name: Wait for completion of deployment
    command: k3s kubectl get pods
    become: True
    register: k3s_kubectl_get_pods
    until: (k3s_kubectl_get_pods.stdout | regex_findall('Running') | length) == 3
    retries: 9999
    delay: 1
    delegate_to: K3sMaster
    run_once: true
    tags: platform

  - name: Ensure event FINISHED_START_KNS_DEPLOYMENT (25) is inserted
    command: >
      python3 ../minion/minion_db_service.py event 
      --host_id {{ host_oid.stdout_lines[0] }}
      --correlation_id  {{ start_kns_deployment_uuid.stdout_lines[0] }}
      --event_type 25
      --body ""
    delegate_to: localhost
    run_once: true
    tags: simulation

  # kns deployment idle
  - name: Wait additional {{ SIMULATION_IDLE_INTERVAL }} sec.
    pause:
      seconds: "{{ SIMULATION_IDLE_INTERVAL }}"

  - name: Ensure event STOP_KNS_DEPLOYMENT (26) is inserted
    command: >
      python3 ../minion/minion_db_service.py event 
      --host_id {{ host_oid.stdout_lines[0] }}
      --correlation_id  {{ stop_kns_deployment_uuid.stdout_lines[0] }}
      --event_type 26
      --body ""
    delegate_to: localhost
    run_once: true
    tags: simulation

  - name: nginx-deployment is deleted
    command: k3s kubectl delete -f nginx-deployment.yaml
    delegate_to: K3sMaster
    run_once: true
    become: true
    tags: platform

  - name: Wait for completion of deployment removal
    command: k3s kubectl get pods
    become: True
    register: k3s_kubectl_get_pods
    until: (k3s_kubectl_get_pods.stdout | length) == 0
    retries: 9999
    delay: 1
    delegate_to: K3sMaster
    run_once: true  
    tags: platform

  - name: Ensure event FINISHED_STOP_KNS_DEPLOYMENT (27) is inserted
    command: >
      python3 ../minion/minion_db_service.py event 
      --host_id {{ host_oid.stdout_lines[0] }}
      --correlation_id  {{ stop_kns_deployment_uuid.stdout_lines[0] }}
      --event_type 27
      --body ""
    delegate_to: localhost
    run_once: true
    tags: simulation

  - name: Wait additional {{ SIMULATION_WAIT_INTERVAL }} sec.
    pause:
      seconds: "{{ SIMULATION_WAIT_INTERVAL }}"

  - name: Ensure event START_KNS_UNJOIN_NODES (28) is inserted
    command: >
        python3 ../minion/minion_db_service.py event 
        --host_id {{ host_oid.stdout_lines[0] }} 
        --correlation_id  {{ start_kns_unjoin_nodes_uuid.stdout_lines[0] }}
        --event_type 28
        --body ""
    register: stop_kns_deployment_event_oid
    delegate_to: localhost
    run_once: true
    tags: simulation

  - name: Nodes left the cluster
    systemd:
      name: k3s-agent
      state: stopped
    throttle: 1
    become: True
    when: "inventory_hostname in groups['K3sWorkerNodes']"
    ignore_errors: yes
    tags: platform

  - name: All nodes are removed from the master node
    shell: | 
      k3s kubectl drain {{ hostname }} --ignore-daemonsets
      k3s kubectl delete node {{ hostname }}
    delegate_to: K3sMaster
    become: True
    when: "inventory_hostname in groups['K3sWorkerNodes']"
    ignore_errors: yes
    tags: platform

  - name: Wait for completion of node removal
    command: k3s kubectl get nodes
    become: True
    register: k3s_kubectl_get_nodes
    until: (k3s_kubectl_get_nodes.stdout_lines | length) == 2
    retries: 9999
    delay: 1
    delegate_to: K3sMaster
    run_once: true
    tags: platform

  - name: Ensure event FINISHED_KNS_UNJOIN_NODES (29) is inserted
    command: >
        python3 ../minion/minion_db_service.py event 
        --host_id {{ host_oid.stdout_lines[0] }} 
        --correlation_id  {{ start_kns_unjoin_nodes_uuid.stdout_lines[0] }}
        --event_type 29
        --body ""
    register: stop_kns_deployment_event_oid
    delegate_to: localhost
    run_once: true
    tags: simulation
  
  - name: Wait additional {{ SIMULATION_WAIT_INTERVAL }} sec.
    pause:
      seconds: "{{ SIMULATION_WAIT_INTERVAL }}"

  - name: Ensure event STOP_KNS_PLATFORM (30) is inserted
    command: >
        python3 ../minion/minion_db_service.py event 
        --host_id {{ host_oid.stdout_lines[0] }} 
        --correlation_id  {{ stop_kns_platform_uuid.stdout_lines[0] }}
        --event_type 30
        --body ""
    delegate_to: localhost
    run_once: true
    tags: simulation

  - name: k3s is stopped
    systemd: 
      name: k3s
      state: stopped
    become: True
    when: "inventory_hostname in groups['K3sMasterNodes']"
    ignore_errors: yes
    tags: platform

  - name: Ensure event FINISHED_STOP_KNS_PLATFORM (31) is inserted
    command: >
        python3 ../minion/minion_db_service.py event 
        --host_id {{ host_oid.stdout_lines[0] }} 
        --correlation_id  {{ stop_kns_platform_uuid.stdout_lines[0] }}
        --event_type 31
        --body ""
    delegate_to: localhost
    run_once: true
    tags: simulation

  - name: Wait additional {{ SIMULATION_WAIT_INTERVAL }} sec.
    pause:
      seconds: "{{ SIMULATION_WAIT_INTERVAL }}"

  - name: Ensure event STOP_SIMULATION (9) is inserted
    command: >
      python3 ../minion/minion_db_service.py event 
      --host_id {{ host_oid.stdout_lines[0] }} 
      --correlation_id  {{ start_simulation_correlation_uuid.stdout_lines[0] }}
      --event_type 9
      --body ""
    delegate_to: localhost
    run_once: true
    tags: simulation