---
- import_tasks: tasks/mK8s/install-microk8s.yaml
- name: Waited {{ SIMULATION_WAIT_INTERVAL }} sec.
  pause:
    seconds: "{{ SIMULATION_WAIT_INTERVAL }}"
  tags: simulation

- name: Microk8s is stopped
  command: microk8s stop
  become: True
  tags: platform

- name: Waited {{ SIMULATION_WAIT_INTERVAL }} sec.
  pause:
    seconds: "{{ SIMULATION_WAIT_INTERVAL }}"

- name: Print debug information
  debug:
    msg: "{{ simulation }}-{{ platform }}-{{ mK8S_VERSION }}-{{SIMULATION_WAIT_INTERVAL}}-{{SIMULATION_IDLE_INTERVAL}}-{{SIMULATION_END_INTERVAL}}"
  run_once: yes

- name: Simulation is inserted
  command: python3 ../minion/minion_db_service.py simulation --sim_id {{ simulation }} --platform {{ platform }}
  register: sim_oid
  delegate_to: localhost
  run_once: true
  tags: simulation

- set_fact:
    sim_oid: "{{ sim_oid }}"
  run_once: true
  tags: simulation

- name: Controller host is inserted
  command: python3 ../minion/minion_db_service.py host --simulation_id {{ sim_oid.stdout_lines[0] }} --hostname "uniba-dsg-linux0" --role "controller"
  register: host_oid
  delegate_to: localhost
  run_once: true
  tags: simulation

- set_fact:
    host_oid: "{{ host_oid }}"
  run_once: true
  tags: simulation

- name: Hosts are inserted
  command: python3 ../minion/minion_db_service.py host --simulation_id {{ sim_oid.stdout_lines[0] }} --hostname {{ hostname }} --role {{ role }}
  delegate_to: localhost
  tags: simulation

- name: nginx-deployment.yaml is present on remote machine
  copy:
    src: templates/nginx-deployment.yaml
    dest: /home/{{ ansible_user }}/nginx-deployment.yaml
    force: yes
  tags: platform

- name: Ensure correlation id for START_SIMULATION (8) is created
  command: python3 ../minion/minion_db_service.py uuid
  register: start_simulation_correlation_uuid
  delegate_to: localhost
  run_once: true
  tags: simulation

- name: Ensure correlation id for START_KNS_PLATFORM (20) is created
  command: python3 ../minion/minion_db_service.py uuid
  register: start_kns_platform_uuid
  delegate_to: localhost
  run_once: true
  tags: simulation

- name: Ensure correlation id for START_KNS_JOIN_NODES (22) is created
  command: python3 ../minion/minion_db_service.py uuid
  register: start_kns_join_nodes_uuid
  delegate_to: localhost
  run_once: true
  tags: simulation

- name: Ensure correlation id for START_KNS_DEPLOYMENT (24) is created
  command: python3 ../minion/minion_db_service.py uuid
  register: start_kns_deployment_uuid
  delegate_to: localhost
  run_once: true
  tags: simulation

- name: Ensure correlation id for STOP_KNS_DEPLOYMENT (26) is created
  command: python3 ../minion/minion_db_service.py uuid
  register: stop_kns_deployment_uuid
  delegate_to: localhost
  run_once: true
  tags: simulation

- name: Ensure correlation id for START_KNS_UNJOIN_NODES (28) is created
  command: python3 ../minion/minion_db_service.py uuid
  register: start_kns_unjoin_nodes_uuid
  delegate_to: localhost
  run_once: true
  tags: simulation

- name: Ensure correlation id for STOP_KNS_PLATFORM (30) is created
  command: python3 ../minion/minion_db_service.py uuid
  register: stop_kns_platform_uuid
  delegate_to: localhost
  run_once: true
  tags: simulation

- name: Ensure event START_SIMULATION (8) is inserted
  command: >
    python3 ../minion/minion_db_service.py event 
    --host_id {{ host_oid.stdout_lines[0] }} 
    --correlation_id  {{ start_simulation_correlation_uuid.stdout_lines[0] }}
    --event_type 8
    --body ""
  delegate_to: localhost
  run_once: true
  tags: simulation

# system is idle
- name: Waited {{ SIMULATION_IDLE_INTERVAL }} sec.
  pause:
    seconds: "{{ SIMULATION_IDLE_INTERVAL }}"

- name: Ensure event START_KNS_PLATFORM (20) is inserted
  command: >
    python3 ../minion/minion_db_service.py event 
    --host_id {{ host_oid.stdout_lines[0] }} 
    --correlation_id  {{ start_kns_platform_uuid.stdout_lines[0] }}
    --event_type 20
    --body ""
  delegate_to: localhost
  run_once: true
  tags: simulation

- name: Microk8s is started
  command: microk8s start
  become: True
  ignore_errors: yes
  when: "inventory_hostname in groups['mK8sMasterNodes']"
  tags: platform

- name: Microk8s start is acknowledged
  command: microk8s status --wait-ready
  become: True
  ignore_errors: yes
  when: "inventory_hostname in groups['mK8sMasterNodes']"
  tags: platform

- name: Microk8s masternode start is acknowledged
  command: microk8s kubectl get nodes
  become: True
  register: mK8s_kubectl_get_nodes
  until: (mK8s_kubectl_get_nodes.stdout | regex_findall('NotReady') | length) == 0 and (mK8s_kubectl_get_nodes.stdout | regex_findall('Ready') | length) == 1
  retries: 9999
  delay: 1
  delegate_to: mK8sMaster
  run_once: true
  tags: platform

- name: Ensure event FINISHED_START_KNS_PLATFORM (21) is inserted
  command: >
    python3 ../minion/minion_db_service.py event 
    --host_id {{ host_oid.stdout_lines[0] }} 
    --correlation_id  {{ start_kns_platform_uuid.stdout_lines[0] }}
    --event_type 21
    --body ""
  delegate_to: localhost
  run_once: true
  tags: simulation

# kns master idle
- name: Waited {{ SIMULATION_IDLE_INTERVAL }} sec.
  pause:
    seconds: "{{ SIMULATION_IDLE_INTERVAL }}"

- name: Ensure event START_KNS_JOIN_NODES (22) is inserted
  command: >
    python3 ../minion/minion_db_service.py event 
    --host_id {{ host_oid.stdout_lines[0] }} 
    --correlation_id  {{ start_kns_join_nodes_uuid.stdout_lines[0] }}
    --event_type 22
    --body ""
  delegate_to: localhost
  run_once: true
  tags: simulation

- name: MicroK8s master is elected
  command: microk8s.add-node
  register: add_node_string
  become: True
  with_items: "{{ groups['mK8sWorkerNodes'] }}"
  when: "inventory_hostname in groups['mK8sMasterNodes']"
  tags: platform

- set_fact:
    conn_strings: "{{ (conn_strings) | default([]) }} + {{ [item.stdout_lines[5]] }}"
  with_items: "{{ add_node_string.results }}"
  when: "inventory_hostname in groups['mK8sMasterNodes']"
  tags: platform

- name: Worker nodes are joined
  shell: |
    {{ item.0 }}
  become: True
  delegate_to: "{{ item.1 }}"
  throttle: 1
  with_together:
    - "{{ conn_strings }}"
    - "{{ groups['mK8sWorkerNodes'] }}"
  when: "inventory_hostname in groups['mK8sMasterNodes']"
  tags: platform

- name: Check nodes for ready states
  command: microk8s kubectl get nodes
  become: True
  register: microk8s_kubectl_get_nodes
  until: (microk8s_kubectl_get_nodes.stdout | regex_findall('NotReady') | length) == 0 and (microk8s_kubectl_get_nodes.stdout | regex_findall('Ready') | length) == 4
  retries: 9999
  delay: 1
  delegate_to: mK8sMaster
  run_once: true
  tags: platform

- name: Ensure event FINISHED_KNS_JOIN_NODES (23) is inserted
  command: >
    python3 ../minion/minion_db_service.py event 
    --host_id {{ host_oid.stdout_lines[0] }}
    --correlation_id  {{ start_kns_join_nodes_uuid.stdout_lines[0] }}
    --event_type 23
    --body ""
  delegate_to: localhost
  run_once: true
  tags: simulation

# kns cluster idle
- name: Wait additional {{ SIMULATION_IDLE_INTERVAL }} sec.
  pause:
    seconds: "{{ SIMULATION_IDLE_INTERVAL }}"

- name: Ensure event START_KNS_DEPLOYMENT (24) is inserted
  command: >
    python3 ../minion/minion_db_service.py event 
    --host_id {{ host_oid.stdout_lines[0] }}
    --correlation_id  {{ start_kns_deployment_uuid.stdout_lines[0] }}
    --event_type 24
    --body ""
  delegate_to: localhost
  run_once: true
  tags: simulation

- name: Deploy nginx deployment
  command: microk8s kubectl apply -f nginx-deployment.yaml
  delegate_to: mK8sMaster
  run_once: true
  become: true
  tags: platform

- name: Wait for completion of deployment
  command: microk8s kubectl get pods
  become: True
  register: microk8s_kubectl_get_pods
  until: (microk8s_kubectl_get_pods.stdout | regex_findall('Running') | length) == 3
  retries: 9999
  delay: 1
  delegate_to: mK8sMaster
  run_once: true
  tags: platform

- name: Ensure event FINISHED_START_KNS_DEPLOYMENT (25) is inserted
  command: >
    python3 ../minion/minion_db_service.py event 
    --host_id {{ host_oid.stdout_lines[0] }}
    --correlation_id  {{ start_kns_deployment_uuid.stdout_lines[0] }}
    --event_type 25
    --body ""
  delegate_to: localhost
  run_once: true
  tags: simulation

# kns deployment idle
- name: Wait additional {{ SIMULATION_IDLE_INTERVAL }} sec.
  pause:
    seconds: "{{ SIMULATION_IDLE_INTERVAL }}"

- name: Ensure event STOP_KNS_DEPLOYMENT (26) is inserted
  command: >
    python3 ../minion/minion_db_service.py event 
    --host_id {{ host_oid.stdout_lines[0] }}
    --correlation_id  {{ stop_kns_deployment_uuid.stdout_lines[0] }}
    --event_type 26
    --body ""
  delegate_to: localhost
  run_once: true
  tags: simulation

- name: nginx-deployment is deleted
  command: microk8s kubectl delete -f nginx-deployment.yaml
  delegate_to: mK8sMaster
  run_once: true
  become: true
  tags: platform

- name: Wait for completion of deployment removal
  command: microk8s kubectl get pods
  become: True
  register: microk8s_kubectl_get_pods
  until: (microk8s_kubectl_get_pods.stdout | length) == 0
  retries: 9999
  delay: 1
  delegate_to: mK8sMaster
  run_once: true  
  tags: platform

- name: Ensure event FINISHED_STOP_KNS_DEPLOYMENT (27) is inserted
  command: >
    python3 ../minion/minion_db_service.py event 
    --host_id {{ host_oid.stdout_lines[0] }}
    --correlation_id  {{ stop_kns_deployment_uuid.stdout_lines[0] }}
    --event_type 27
    --body ""
  delegate_to: localhost
  run_once: true
  tags: simulation

- name: Wait additional {{ SIMULATION_WAIT_INTERVAL }} sec.
  pause:
    seconds: "{{ SIMULATION_WAIT_INTERVAL }}"

- name: Ensure event START_KNS_UNJOIN_NODES (28) is inserted
  command: >
    python3 ../minion/minion_db_service.py event 
    --host_id {{ host_oid.stdout_lines[0] }} 
    --correlation_id  {{ start_kns_unjoin_nodes_uuid.stdout_lines[0] }}
    --event_type 28
    --body ""
  register: stop_kns_deployment_event_oid
  delegate_to: localhost
  run_once: true
  tags: simulation

- name: Nodes left the cluster
  shell: |
    microk8s leave
    microk8s stop
  throttle: 1
  become: True
  when: "inventory_hostname in groups['mK8sWorkerNodes']"
  ignore_errors: yes
  tags: platform

- name: All nodes are removed from the master node
  command: microk8s remove-node {{ hostname }}
  throttle: 1
  delegate_to: mK8sMaster
  become: True
  when: "inventory_hostname in groups['mK8sWorkerNodes']"
  ignore_errors: yes
  tags: platform

- name: Wait for completion of node removal
  command: microk8s kubectl get nodes
  become: True
  register: microk8s_kubectl_get_nodes
  until: (microk8s_kubectl_get_nodes.stdout_lines | length) == 2
  retries: 9999
  delay: 1
  delegate_to: mK8sMaster
  run_once: true
  tags: platform

- name: Ensure event FINISHED_KNS_UNJOIN_NODES (29) is inserted
  command: >
      python3 ../minion/minion_db_service.py event 
      --host_id {{ host_oid.stdout_lines[0] }} 
      --correlation_id  {{ start_kns_unjoin_nodes_uuid.stdout_lines[0] }}
      --event_type 29
      --body ""
  register: stop_kns_deployment_event_oid
  delegate_to: localhost
  run_once: true
  tags: simulation

- name: Wait additional {{ SIMULATION_WAIT_INTERVAL }} sec.
  pause:
    seconds: "{{ SIMULATION_WAIT_INTERVAL }}"

- name: Ensure event STOP_KNS_PLATFORM (30) is inserted
  command: >
      python3 ../minion/minion_db_service.py event 
      --host_id {{ host_oid.stdout_lines[0] }} 
      --correlation_id  {{ stop_kns_platform_uuid.stdout_lines[0] }}
      --event_type 30
      --body ""
  delegate_to: localhost
  run_once: true
  tags: simulation

- name: microk8s is stopped
  command: microk8s stop
  become: True
  when: "inventory_hostname in groups['mK8sMasterNodes']"
  tags: platform

- name: Ensure event FINISHED_STOP_KNS_PLATFORM (31) is inserted
  command: >
      python3 ../minion/minion_db_service.py event 
      --host_id {{ host_oid.stdout_lines[0] }} 
      --correlation_id  {{ stop_kns_platform_uuid.stdout_lines[0] }}
      --event_type 31
      --body ""
  delegate_to: localhost
  run_once: true
  tags: simulation

- name: Wait additional {{ SIMULATION_IDLE_INTERVAL }} sec.
  pause:
    seconds: "{{ SIMULATION_IDLE_INTERVAL }}"

- name: Ensure event STOP_SIMULATION (9) is inserted
  command: >
    python3 ../minion/minion_db_service.py event 
    --host_id {{ host_oid.stdout_lines[0] }} 
    --correlation_id  {{ start_simulation_correlation_uuid.stdout_lines[0] }}
    --event_type 9
    --body ""
  delegate_to: localhost
  run_once: true
  tags: simulation
- name: Wait additional {{ SIMULATION_END_INTERVAL }} sec.
  pause:
    seconds: "{{ SIMULATION_END_INTERVAL }}"
- name: reset conn_strings
  set_fact:
    conn_strings: []
  run_once: true
  tags: platform

- import_tasks: tasks/mK8s/stop-microk8s.yaml
- import_tasks: tasks/mK8s/uninstall-microk8s.yaml